import glob
import os

import argparse
import pathlib
parser = argparse.ArgumentParser(description='''
								 copy this file to workdir
								 example:  python trr2xtc.py --start 2 --end 30 --gro gro --top top --mdp eq   
								 '''                    
								 )
parser.add_argument("--start", help = "start file number, optional", type = int)
parser.add_argument("--end", help = "end file number, optional", type = int)
parser.add_argument('--gro', help = 'gro file path', type = pathlib.Path)
parser.add_argument('--top', help = 'top file path', type = pathlib.Path)
parser.add_argument('--mdp', help = 'mdp file path', type = pathlib.Path)

args = parser.parse_args()
start, end = max(0,args.start), min(args.end, 1e10)
gro_name, top_name, mdp_name= args.gro, args.top, args.mdp

trr_files = []
for i in range(int(start), int(end)+1):
	if os.path.exists("./" + str(i)):
		print(i)
		trr_files += glob.glob(str(i) + '/*.trr')

print(trr_files)
# convert trr to xtc for each trj
for trr in trr_files:
	filename  =  os.path.basename(trr).split('.')[0]
	outname = filename+'.xtc'
	cmd = f"echo 0 | gmx trjconv -f {trr} -s {gro_name} -o {outname}"
	print(cmd)
	os.system(cmd)

# make a dir and merge xtc files
cmd = f"mkdir xtc && cd xtc && mv ../MHPC*.xtc . && gmx trjcat -f ./*.xtc -o merged.xtc && mv merged.xtc ../"
print(cmd)
os.system(cmd)

#get info from gro and top files for trjconv
cmd = f"gmx grompp -f {mdp_name} -c {gro_name} -p {top_name} -o sys.tpr"
print(cmd)
os.system(cmd)

# remove pbc, rot and trans
cmd = f'echo 1 0|gmx trjconv -f merged.xtc -s sys.tpr -pbc nojump -center -o nojump.xtc'
print(cmd)
os.system(cmd)
cmd = f'echo 1 1 0|gmx trjconv -f nojump.xtc -s sys.tpr -center -o nojump_rottrans.xtc -fit rot+trans'
print(cmd)
os.system(cmd)

cmd = f"cp nojump_rottrans.xtc {start}_{end}_out.xtc"
os.system(cmd)

cmd = f"rm -rv nojump* merged* xtc mdout.mdp"
os.system(cmd)
